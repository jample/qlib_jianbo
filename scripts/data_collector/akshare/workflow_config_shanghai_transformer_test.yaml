qlib_init:
    provider_uri: "scripts/data_collector/akshare/qlib_data"
    region: cn

market: &market "all"

data_handler_config: &data_handler_config
    start_time: 2022-01-01
    end_time: 2024-12-31
    fit_start_time: 2022-01-01
    fit_end_time: 2023-12-31
    instruments: *market

port_analysis_config: &port_analysis_config
    strategy:
        class: TopkDropoutStrategy
        module_path: qlib.contrib.strategy.signal_strategy
        kwargs:
            signal: <PRED>
            topk: 50
            n_drop: 5
    backtest:
        start_time: 2023-01-01
        end_time: 2024-12-31
        account: 100000000
        benchmark: SH000300
        exchange_kwargs:
            limit_threshold: 0.095
            deal_price: close
            open_cost: 0.0005
            close_cost: 0.0015
            min_cost: 5

task:
    model:
        class: TransformerModel
        module_path: qlib.contrib.model.pytorch_transformer_ts
        kwargs:
            seed: 0
            n_jobs: 2
            d_feat: 8  # 8 basic features that work reliably
            d_model: 64
            nhead: 4
            num_layers: 3
            dropout: 0.2
            n_epochs: 3  # Quick test with 3 epochs
            lr: 0.0005
            metric: loss
            batch_size: 32
            early_stop: 5
            loss: mse
            optimizer: adam

    dataset:
        class: TSDatasetH
        module_path: qlib.data.dataset
        kwargs:
            step_len: 30
            handler:
                class: DataHandlerLP
                module_path: qlib.data.dataset.handler
                kwargs:
                    start_time: 2022-01-01
                    end_time: 2024-12-31
                    instruments: all
                    data_loader:
                        class: QlibDataLoader
                        module_path: qlib.data.dataset.loader
                        kwargs:
                            config:
                                feature:
                                    # Basic reliable features
                                    - "($close-$open)/$open"  # intraday return
                                    - "($close-Ref($close,1))/Ref($close,1)"  # daily return
                                    - "($close-Ref($close,2))/Ref($close,2)"  # 2-day return
                                    - "($close-Ref($close,5))/Ref($close,5)"  # 5-day return
                                    - "($volume-Ref($volume,1))/Ref($volume,1)"  # volume change
                                    - "($high-$low)/$close"  # daily volatility
                                    - "($close-Mean($close,5))/Mean($close,5)"  # price vs 5-day MA
                                    - "($close-Mean($close,10))/Mean($close,10)"  # price vs 10-day MA
                                label:
                                    - "Ref($close, -2)/Ref($close, -1) - 1"
                    infer_processors:
                        - class: Fillna
                          kwargs:
                              fields_group: feature
                    learn_processors:
                        - class: DropnaLabel
                          kwargs: {}
                        - class: CSRankNorm
                          kwargs:
                              fields_group: label
            segments:
                train: [2022-01-01, 2023-12-31]
                valid: [2023-01-01, 2024-06-30]
                test: [2024-07-01, 2024-12-31]

    record:
        - class: SignalRecord
          module_path: qlib.workflow.record_temp
          kwargs:
            model: <MODEL>
            dataset: <DATASET>
        - class: SigAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs:
            ana_long_short: False
            ann_scaler: 252
        - class: PortAnaRecord
          module_path: qlib.workflow.record_temp
          kwargs:
            config: *port_analysis_config
